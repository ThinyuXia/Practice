<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/task
            http://www.springframework.org/schema/task/spring-task.xsd
            http://www.springframework.org/schema/mvc
            http://www.springframework.org/schema/mvc/spring-mvc.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx.xsd">

<!--        3.开启注解模式-->
    <context:component-scan base-package="com.xiaxinyu"/>
    <mvc:annotation-driven>
<!--        解决响应中文乱码问题-->
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html;charset=utf-8</value>
<!--                        6.JSON序列化输出配置-->
                        <value>application/json;charset=utf-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <mvc:default-servlet-handler></mvc:default-servlet-handler>

<!--    5.配置Freemarker模版引擎-->
    <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="/WEB-INF/ftl"/>
        <property name="freemarkerSettings">
            <props>
<!--                Freemarker读取ftl文件时所使用的编码-->
                <prop key="defaultEncoding">utf-8</prop>
            </props>
        </property>
    </bean>

    <bean id="ViewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <!--        解决使用freemarker模版引擎时响应中文乱码问题-->
        <property name="contentType" value="text/html;charset=utf-8"/>
<!--        配置freemarker模版文件扩展名-->
        <property name="suffix" value =".ftl"/>
    </bean>

<!--    Mybatis与Spring的整合配置-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/reader?useSSL=false&amp;useUnicode=true&amp;character=utf-8&amp;serverTimezone=Asia/Shanghai&amp;allowPublicKeyRetrieval=true"/>
        <property name="username" value="root"/>
        <property name="password" value="xiaxinyv6"/>
        <property name="initialSize" value="5"/>
        <property name="maxActive" value="20"/>
    </bean>

<!--    SqlSessionFactoryBean用于根据配置信息创建SqlSessionFactory，不需要手动创建-->
<!--原生Mybatis与Spring整合
    <bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">-->
    <bean id="sessionFactory" class="com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath:mappers/*.xml"/>
<!--        Mybatis配置文件所在地址-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
    </bean>

<!--    配置Mapper接口扫描器-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.xiaxinyu.mapper"/>
    </bean>

<!--    声明式事务配置-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager"/>

<!--    配置Kaptcha-->
    <bean id="kaptchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
        <property name="config">
            <bean class="com.google.code.kaptcha.util.Config">
                <constructor-arg>
                    <props>
    <!--                    验证码图片不生成边框-->
                        <prop key="kaptcha.border">no</prop>
    <!--                    验证码图片宽度为120像素-->
                        <prop key="kaptcha.image.width">120</prop>
<!--                        验证码图片字体颜色为蓝色-->
                        <prop key="kaptcha.textproducer.font.color">blue</prop>
<!--                        每个字符最大为40像素-->
                        <prop key="kaptcha.textproducer.font.size">40</prop>
<!--                        验证码包含四个字符-->
                        <prop key="kaptcha.textproducer.char.length">4</prop>
                    </props>
                </constructor-arg>
            </bean>
        </property>
    </bean>
</beans>